createdAt: "2018-08-23T13:10:29.209Z"
updatedAt: "2018-08-23T14:19:34.512Z"
type: "MARKDOWN_NOTE"
folder: "40fa03c0e6b2e019af25"
title: "Micro Frontends"
content: '''
  ## Micro Frontends
  
  
  
  #### Questions
  1. Other than emitting events, how do you share common things like styles? Or do you just not do that? 
  2. Is it better to intigrate different pieces client or server side? Server side seems cooler, but page load time is dependent on slowest piece   
      - I guess that's no different than anything else.  One article suggested designating a maximum load time for the project that all pieces must meet (at least to render something like a load bar, if not the full piece)
  3. How is the router part different from a normal router? How does it deal with the containing page?
  
  
  #### Tangents
  * Loading States / Skeleton Screens
  * Custom HTML ELements
  * Sharing Fetches? Are individual calls better or worse?
  * [Project Mosaic—Frontend Microservices](https://www.mosaic9.org/)
  
  
  #### Core Ideas
  * **Be Technology Agnostic.** Each team should be able to choose and upgrade their stack without having to coordinate with other teams. Custom Elements are a great way to hide implementation details while providing a neutral interface to others.
  * **Isolate Team Code.** Don’t share a runtime, even if all teams use the same framework. Build independent apps that are self contained. Don’t rely on shared state or global variables.
  * **Establish Team Prefixes.** Agree on naming conventions where isolation is not possible yet. Namespace CSS, Events, Local Storage and Cookies to avoid collisions and clarify ownership.
  * **Favor Native Browser Features over Custom APIs.** Use Browser Events for communication instead of building a global PubSub system. If you really have to build a cross team API, try keeping it as simple as possible.
  * **Build a Resilient Site.** Your feature should be useful, even if JavaScript failed or hasn’t executed yet. Use Universal Rendering and Progressive Enhancement to improve perceived performance.
  
  
'''
tags: []
isStarred: false
isTrashed: false
